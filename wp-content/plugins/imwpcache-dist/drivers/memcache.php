<?php
 namespace imwpcache\drivers; class memcache implements driver { private $memcache; public function connect($config) { if (!$this->memcache) { $this->memcache = new \Memcache(); } if ($this->memcache->connect($config['host'], $config['port'])) { $this->memcache->setCompressThreshold(20000,0.2); return true; } else { return false; } } public function set($key, $value, $expire) { return $this->memcache->set($key, $value, MEMCACHE_COMPRESSED, $expire); } public function get($key) { return $this->memcache->get($key); } public function exists($key) { if ($this->memcache->get($key)) { return true; } return false; } public function delete($key) { return $this->memcache->delete($key); } public function flush() { return $this->memcache->flush(); } public function getStats() { return $this->memcache->getStats(); } public function isExpire($key = null) { return false; } }