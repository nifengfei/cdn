<?php
 namespace imwpcache\drivers; class memcached implements driver { private $Memcached; public function connect($config) { if (!$this->Memcached) { $this->Memcached = new \Memcached(); } if ($this->Memcached->addServer($config['host'], $config['port'])) { $this->Memcached->setOption(Memcached::OPT_COMPRESSION, true); return true; } else { return false; } } public function set($key, $value, $expire) { return $this->Memcached->set($key, $value, $expire); } public function get($key) { return $this->Memcached->get($key); } public function exists($key) { if ($this->Memcached->get($key)) { return true; } return false; } public function delete($key) { return $this->Memcached->delete($key); } public function flush() { return $this->Memcached->flush(); } public function getStats() { return $this->Memcached->getStats(); } public function isExpire($key = null) { return false; } }