<?php
 namespace imwpf\admin; use imwpf\modules\Form; use imwpf\modules\Updater; use imwpf\modules\Hub; class UI { public function start() { add_action('admin_menu', array($this, 'addMenu')); add_action('imwp_update_check', array($this, 'updateCheck')); add_action('admin_notices', array($this, 'updateNotice')); \imwpf\modules\Cron::add("imwp_update_check", 43200); } public function updateCheck() { $Updater = new Updater(); $result = $Updater->getAllLatestVersion(); update_option('imwp_update_check', json_encode($result)) && add_option('imwp_update_check', json_encode($result)); return; } public function updateNotice() { $update = get_option('imwp_update_check'); if (!$update) { return; } $update = json_decode($update, true); $updatePage = admin_url('admin.php?page=imwpf'); $html = ''; if ($update['themes']) { foreach ($update['themes'] as $theme => $v) { $html .= '<div class="update-nag notice notice-warning inline">' . $v['cn'] . '有新版本' . $v['v'] . ', <a href="' . $updatePage . '">去更新</a></div>'; } } if ($update['plugins']) { foreach ($update['plugins'] as $plugin => $v) { $html .= '<div class="update-nag notice notice-warning inline">' . $v['cn'] . '有新版本' . $v['v'] . ', <a href="' . $updatePage . '">去更新</a></div>'; } } echo $html; } public function addMenu() { add_menu_page('imwpf', '扩展集', 'manage_options', 'imwpf', array($this, 'home')); add_submenu_page('imwpf', '可选功能', '可选功能', 'manage_options', 'imwpf_functions', array($this, 'optionFunctions')); $options = Options::getInstance('imwpf_options')->get('system'); if (!$options) { $options = array(); } if (in_array('papi', $options)) { add_submenu_page('imwpf', '发布接口', '发布接口', 'manage_options', 'imwpf_publish', array($this, 'publish')); } if (in_array('optimize', $options)) { add_submenu_page('imwpf', '优化工具', '优化工具', 'manage_options', 'imwpf_optmizer', array($this, 'optimize')); } if (in_array('seo', $options)) { add_submenu_page('imwpf', 'SEO工具箱', 'SEO工具箱', 'manage_options', 'imwpf_seo', array($this, 'seo')); } if (in_array('admin', $options)) { add_submenu_page('imwpf', '后台增强', '后台增强', 'manage_options', 'imwpf_admin', array($this, 'admin')); } } public function optionFunctions() { echo "<h2>可选功能</h2>"; echo "<p>请在下面勾选需要使用的功能</p>"; echo "<hr/>"; $Form = new Form('POST'); $options = array( 'papi' => '开启发布接口', 'optimize' => '开启优化工具箱', 'admin' => '开启后台增强工具', 'seo' => '开启SEO工具箱', ); if (!empty($_POST)) { Options::getInstance('imwpf_options')->add('system', $_POST['imwpf_options']); } $values = Options::getInstance('imwpf_options')->get('system'); if (!$values) { $values = array(); } echo $Form->multiCheck("imwpf_options", $options, $values, "开启的功能选项")->render(); } public function home() { if (isset($_GET['check_update'])) { $this->updateCheck(); $url = admin_url('admin.php?page=imwpf'); echo "<script>window.location.replace(\"{$url}\");</script>"; } $checkCron = \imwpf\modules\Cron::get('imwp_update_check'); if ($checkCron) { $next = date('Y-m-d H:i:s', $checkCron['n']); } else { $next = "还没有开始检查"; } echo "<h2>扩展集选项</h2>"; echo "<p>本插件提供了imwpweb主题和插件运行的基础库，使用imwpweb产品需要先安装该库。</p>"; echo "<p>同时本插件也提供扩展wordpress功能，让wordpress使用更方便，运行更快速！</p>"; echo '<hr/>'; echo '<h2>高级更新</h2>'; echo "<p>高级更新提供所有imwp系列的主题和插件的自动更新功能</p>"; echo "<p>下次检查时间:{$next} <a href='?page=imwpf&check_update=1'>立即检查更新</a></p>"; $update = get_option('imwp_update_check'); $update = json_decode($update, true); $html = '<table class="wp-list-table widefat striped">'; if ($update['themes']) { foreach ($update['themes'] as $theme => $v) { $html .= '<tr><td>' . $v['cn'] . '有新版本' . $v['v'] . '</td>
                    <td><button class="imwp-update button button-primary " data-type="theme" data-name="' . $theme . '">点击更新</button></td>
                </tr>'; } } else { $html .= "<tr><td colspan=2>暂无主题更新</td></tr>"; } if ($update['plugins']) { foreach ($update['plugins'] as $plugin => $v) { $html .= '<tr><td>' . $v['cn'] . '有新版本' . $v['v'] . '</td>
                    <td><button class="imwp-update button button-primary" data-type="plugin" data-name="' . $plugin . '">点击更新</button></td>
                </tr>'; } } else { $html .= "<tr><td colspan=2>暂无插件更新</td></tr>"; } $html .= "<script type='text/javascript'>
            " . file_get_contents(dirname(__DIR__) . '/views/update.js') . "</script>"; $html .= '</table>'; add_thickbox(); echo $html; } public function publish() { echo "<h2>发布接口</h2>"; echo "<p>提供简单易用的文章发布接口，可与三方采集器集成</p>"; echo "<hr/>"; $Form = new Form('POST'); $postAPI = admin_url('/admin-ajax.php?action=imwpf_publish&op=add_post&passwd='); $categoryAPI = admin_url('/admin-ajax.php?action=imwpf_publish&op=add_category&passwd='); if (isset($_POST['password'])) { Options::getInstance('imwpf_options')->add('publish', array( 'password' => sanitize_text_field($_POST['password']), 'custom_field' => sanitize_text_field($_POST['custom_field']), )); } $options = Options::getInstance('imwpf_options')->get('publish'); if (!$options) { $options = array( 'password' => '', 'custom_field' => '', ); } echo $Form->label('文章发布接口', $postAPI . $options['password']) ->label('分类发布接口', $categoryAPI . $options['password']) ->label('发布参数文档', '<a href="http://www.imwpweb.com/" target="_blank">http://www.imwpweb.com/</a>') ->text('custom_field', $options['custom_field'], '自定义字段', '设置接收的自定义字段，多个用逗号隔开') ->text('password', $options['password'], '发布接口密码', '推荐设置发布密码，更安全') ->render(); } public function optimize() { $Optimizer = new \imwpf\builtin\Optimizer(); $value = $Optimizer->handleWPCron(); $value = array_merge($value, $Optimizer->handleOption()); $formData = array( 'method' => 'post', 'action' => '', 'submit' => '提交', 'data' => array( array( 'label' => '禁用定时任务', 'type' => 'check', 'name' => 'd-wpcron', 'option' => '1', 'value' => $value['d-wpcron'], 'desc' => '定时任务可能会导致单次请求耗时严重，建议关闭！可以通过linux的crontab定时请求wp-cron.php来代替内置的定时任务。<br/>如果勾选不生效，请确保imwpf插件目录php-fpm用户组具有可写权限（或者直接将imwpf文件夹权限改为777，设置完成之后再改成755）', ), array( 'label' => '禁用wp-json', 'type' => 'check', 'name' => 'd-wpjson', 'option' => '1', 'value' => $value['d-wpjson'], 'desc' => '如果不需要wp-json，可以前台禁用，禁用之后未登陆状态访问wp-json将会404' ), array( 'label' => '禁用文章修订版', 'type' => 'check', 'name' => 'd-revision', 'option' => '1', 'value' => $value['d-revision'], 'desc' => '如果不需要修订版本，可以关闭节省数据库空间' ), ) ); $Form = new Form(); echo $Form->get($formData); } public function admin() { if (!empty($_POST)) { $data = array( "showid" => $_POST["showid"], "spam_cmt" => $_POST["spam_cmt"], "spam_cmt_txt" => $_POST["spam_cmt_txt"], ); Options::getInstance('imwpf_options')->add('admin_power', $data); $values = Options::getInstance('imwpf_options')->get('admin_power'); } $values = Options::getInstance('imwpf_options')->get('admin_power'); if (!$values) { $values = array(); } $Form = new Form('POST'); $Form->tab("normal", "常规") ->multicheck('showid', array( "show_id" => "显示" ), $values["showid"], "在后台显示文章、标签，分类、作者等ID" ) ->tab("comment", "防垃圾评论") ->multicheck( 'spam_cmt', array( "anti_link" => "禁止发布链接", "anti_nozh" => "禁止无中文评论", ), $values['spam_cmt'], "阻挡垃圾评论" ) ->textarea( 'spam_cmt_txt', $values['spam_cmt_txt'], "禁止关键词", "禁止发布包含以下任意一个关键词的评论，用半角逗号隔开" ); echo $Form->render(); } public function seo() { if (!empty($_POST)) { $data = array( "bd_token" => $_POST["bd_token"], "auto_post" => $_POST["auto_post"], "post_hist" => $_POST["post_hist"], ); Options::getInstance('imwpf_options')->add('seo', $data); if ($_POST['post_hist'] == "1") { \imwpf\modules\Cron::add("post_hist", 120); } else { \imwpf\modules\Cron::delete("post_hist"); } } $values = Options::getInstance('imwpf_options')->get('seo'); if (!$values) { $values = array(); } if (false !== $baidu = get_option("imwpf_bdres")) { $baidu = json_decode($baidu, true); $remain = $baidu['remain']; } $Form = new Form('POST'); $siteURL = str_replace(array('http://', 'https://'), '', get_bloginfo('url')); $query = urlencode('site:' . $siteURL); $Form->tab("normal", "百度推送") ->text("bd_token", $values["bd_token"], "百度token", "填写从百度后台获取的token") ->select("auto_post", array("1" => "开启", "0" => "关闭"), $values["auto_post"], "自动提交", "是否开启文章发布的时候自动提交") ->select("post_hist", array("0" => "关闭", "1" => "开启"), $values["post_hist"], "提交历史文章", "开启历史文章提交将会定时依次提交历史文章，如果安装插件时候已经存在很多文章了，可以开启") ->label("剩余次数", $remain) ->tab("shoulu", "收录查看") ->label("百度收录", "<a href='https://www.baidu.com/s?wd={$query}' target='_blank'>点击查看</a>") ->label("Google收录", "<a href='https://www.google.com/search?q={$query}' target='_blank'>点击查看</a>") ->label("神马收录", "<a href='https://m.sm.cn/s?q={$query}' target='_blank'>点击查看</a>"); echo $Form->render(); } public function weixin() { $Form = new Form('POST'); if (!empty($_POST)) { Options::getInstance('imwpf_options')->add('weixin', array('token' => $_POST['token'], 'help' => $_POST['help'])); } $values = Options::getInstance('imwpf_options')->get('weixin'); echo $Form->label('接口地址', admin_url('admin-ajax.php?action=imwpf_weixin')) ->text('token', $values['token'], 'Token', '微信公众号后台token') ->textarea('help', $values['help'], '默认帮助信息', '当输入的指令不符合预期的时候，显示该帮助信息') ->render(); } protected function display($template, $tpldata = array()) { require dirname(__DIR__) . '/views/' . $template; } } 