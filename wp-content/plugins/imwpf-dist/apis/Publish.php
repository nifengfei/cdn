<?php
 namespace imwpf\apis; use imwpf\admin\Options; class Publish { public function start() { add_action('wp_ajax_imwpf_publish', array($this, 'publish')); add_action('wp_ajax_nopriv_imwpf_publish', array($this, 'publish')); } public function publish() { try { $this->checkPassword($_REQUEST['passwd']); $op = isset($_REQUEST['op']) ? $_REQUEST['op'] : 'add_post'; switch ($op) { case 'add_category': $this->addCategory($_POST); break; case 'add_post': $this->addPost($_POST); default: break; } $msg = '[成功] 发布成功'; $errno = 0; } catch (\Exception $e) { $errno = $e->getCode(); $msg = '[失败]' . $e->getMessage(); } echo json_encode(array('errno' => $errno, 'msg' => $msg), JSON_UNESCAPED_UNICODE); die(); } public function addCategory($post) { if (empty($post['title'])) { throw new \Exception("分类标题为空", 1); } $categoryName = $post['title']; $categorySlug = !empty($post['slug']) ? $post['slug'] : $post['title']; $parent = !empty($post['parent']) ? $post['parent'] : null; $categoryId = $this->insertCategory($categoryName, $categorySlug, $parent); if (!$categoryId) { throw new \Exception("添加分类失败", 1); } return $categoryId; } public function addPost($data) { if (!$data) { throw new \Exception("文章为空", 1); } if (empty($data['post_title'])) { throw new \Exception("章节标题为空", 1); } if (strpos($data['post_category'], ',') !== false) { $categoryNames = explode(',', $data['post_category']); } else { $categoryNames = array($data['post_category']); } $categoryIds = array(); $parentId = 0; foreach ($categoryNames as $categoryName) { $args = array( 'taxonomy' => 'category', 'number' => 1, 'get' => 'all', 'name' => $categoryName, ); $category = get_terms($args); if (!$category) { $categoryIds[] = wp_insert_category(array( 'cat_name' => $categoryName, 'category_nicename' => $categoryName )); } else { $categoryIds[] = $category[0]->term_id; } } if (empty($categoryIds)) { throw new \Exception("添加分类失败", 1); } $posts = get_posts(array( 'name' => $data['post_title'], 'category' => $categoryIds[0], 'post_type' => 'post', )); $id = null; foreach ($posts as $post) { if ($post->post_content == $data['post_content']) { $id = $post->ID; break; } } $postData = array( 'ID' => $id, 'post_author' => 1, 'post_content' => $data['post_content'], 'post_title' => $data['post_title'], 'post_status' => 'publish', 'post_type' => 'post', 'post_category' => $categoryIds, 'tags_input' => !empty($data['post_tags']) ? addslashes($data['post_tags']) : '', ); if (!empty($data['post_name'])) { $postData['post_name'] = $data['post_name']; } if (false == $postId = wp_insert_post($postData)) { throw new \Exception("插入文章失败", 1); } $options = Options::getInstance('imwpf_options')->get('publish'); if (!empty($options['custom_field'])) { $fields = explode(',', $options['custom_field']); foreach ($fields as $field) { if (empty($data[$field])) { continue; } if (!add_post_meta($postId, $field, $data[$field])) { update_post_meta($postId, $field, $data[$field]); } } } return true; } protected function insertCategory($name, $slug = null, $parent = null) { if (!function_exists('wp_insert_category')) { require_once ABSPATH . "wp-admin/includes/taxonomy.php"; } if ($parent) { if (is_numeric($parent)) { $parentId = $parent; } else { $parentCategory = get_term_by('name', $parent, 'category', ARRAY_A); if (!$parentCategory) { $parentId = wp_insert_category(array( 'cat_name' => $parent, 'category_nicename' => $parent )); if (!$parentId) { throw new \Exception("[错误] 写入父分类失败", 1); } } else { $parentId = $parentCategory['term_id']; } } } $currentCategory = get_term_by('name', $name, 'category', ARRAY_A); if ($parent) { if ($currentCategory && $currentCategory['parent'] == $parentId) { return $currentCategory['term_id']; } } else { if ($currentCategory) { return $currentCategory['term_id']; } } $catId = wp_insert_category(array( 'cat_name' => $name, 'category_nicename' => $slug, 'category_parent' => $parentId )); if (!$catId) { throw new \Exception("写入分类失败", 1); } return $catId; } protected function checkPassword($input) { $options = Options::getInstance('imwpf_options')->get('publish'); if (empty($input) || $input != $options['password']) { throw new \Exception("密码错误", 1); } return true; } }