<?php
 namespace imwpf\apis; class Upload { public function start() { add_action('wp_ajax_imwpf_upload', array($this, 'receive')); } public function receive() { $nonce = $_POST['security']; if (!wp_verify_nonce($nonce, 'imwpf_upload_nonce')) { $result = array( 'errno' => 1, 'msg' => 'nonce error', ); echo json_encode($result); die(); } $clickedID = $_POST['data']; $filename = $_FILES[$clickedID]; $filename['name'] = preg_replace('/[^a-zA-Z0-9._\-]/', '', $filename['name']); $override['test_form'] = false; $override['action'] = 'wp_handle_upload'; $uploadedFile = wp_handle_upload($filename, $override); $size = getimagesize($uploadedFile['file']); $attachment = array( 'guid' => $uploadedFile['url'], 'post_mime_type' => $size['mime'], 'post_title' => preg_replace('/\.[^.]+$/', '', basename($uploadedFile['file'])), 'post_content' => '', 'post_status' => 'inherit' ); $attachId = wp_insert_attachment($attachment, $uploadedFile['file']); $attachData = wp_generate_attachment_metadata($attachId, $uploadedFile['file']); wp_update_attachment_metadata($attachId, $attachData); $upload_image[$clickedID] = $uploadedFile['url']; if (!empty($uploadedFile['error'])) { $result = array( 'errno' => 1, 'msg' => $uploadedFile['error'], ); } else { $result = array( 'errno' => 0, 'data' => $uploadedFile['url'], ); } echo json_encode($result); die(); } } 