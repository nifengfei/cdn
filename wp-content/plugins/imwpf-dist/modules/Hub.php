<?php
namespace imwpf\modules; class Hub { public static $hub = array(); public static $instance = array(); public static function bind($name, $closure) { self::$hub[$name] = $closure; } public static function factory($name) { return call_user_func(self::$hub[$name]); } public static function singleton($name, $args = array()) { if (isset(self::$instance[$name])) { return self::$instance[$name]; } if (!isset(self::$hub[$name])) { if (class_exists($name)) { $ref = new \ReflectionClass($name); self::$instance[$name] = $ref->newInstanceArgs($args); } else { self::$instance[$name] = false; } } else { self::$instance[$name] = call_user_func_array(self::$hub[$name], $args); } return self::$instance[$name]; } }