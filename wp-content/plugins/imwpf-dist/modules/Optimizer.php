<?php
 namespace imwpf\modules; class Optimizer { public function disableWPJSON() { add_filter('rest_authentication_errors', function () { if (!is_user_logged_in()) { return new \WP_Error(403, 'not allowed'); } }); } public function optimizeQuery($position = array('home', 'tag', 'category', 'admin')) { $this->optimizeQueryPosition = $position; add_filter('posts_fields_request', array($this, 'limitQueryFields'), 10, 2); } public function disableScanFullTable() { add_filter('posts_request', array($this, 'disableCalcFoundRows'), 10, 1); add_filter('found_posts', array($this, 'setFoundPosts'), 10, 2); add_filter('query', array($this, 'forbidSomeQuery'), 10, 1); add_action('init', array($this, 'countPosts'), 10, 0); add_filter('views_edit-post', function ($views) { $link = "?flush_post_count=1"; if (isset($_GET['cat'])) { $link .= "&cat=" . intval($_GET['cat']); } $views["flush"] = "<a href='{$link}'>刷新计数</a>"; return $views; }); foreach (get_taxonomies() as $taxonomy) { add_action("manage_edit-${taxonomy}_columns", array($this, 'addColumn')); add_filter("manage_${taxonomy}_custom_column", array($this, 'addReturnValue'), 10, 3); } add_action('wp_ajax_flush_count', array($this, 'ajaxFlushCount')); } public function limitQueryFields($fields, $WPQuery) { if (!$this->shouldOptimize()) { return $fields; } if (isset($WPQuery->query['post_type']) && !in_array($WPQuery->query['post_type'], array('post', 'page'))) { return $fields; } $prefix = $GLOBALS['wpdb']->prefix; $fields = "{$prefix}posts.ID, {$prefix}posts.post_date, {$prefix}posts.post_title, {$prefix}posts.post_name, {$prefix}posts.guid, {$prefix}posts.post_status"; return $fields; } public function disableCalcFoundRows($request) { $request = str_replace('SQL_CALC_FOUND_ROWS', '', $request); return $request; } public function forbidSomeQuery($query) { if (strpos($query, 'posts') === false) { return $query; } if (strpos($query, 'GROUP BY post_status') !== false) { return $query; } if (strpos($query, 'SQL_CALC_FOUND_ROWS') !== false) { $query = str_replace('SQL_CALC_FOUND_ROWS', '', $query); return $query; } $forbidQuery = array( "SELECT post_modified_gmt FROM", "SELECT post_date_gmt FROM", "COUNT", ); foreach ($forbidQuery as $q) { if (strpos($query, $q) !== false) { $query = preg_replace("/LIMIT.*/", "", $query); $query .= " LIMIT 0"; break; } } return $query; } public function setFoundPosts($num, $query) { if (strpos($query->request, 'GROUP') !== false) { $countSQL = preg_replace("/SELECT.*?FROM(.*)GROUP.*/is", "SELECT count(1) FROM $1", $query->request); } else if (strpos($query->request, 'ORDER') !== false) { $countSQL = preg_replace("/SELECT.*?FROM(.*)ORDER.*/is", "SELECT count(1) FROM $1", $query->request); } else if (strpos($query->request, 'LIMIT') !== false) { $countSQL = preg_replace("/SELECT.*?FROM(.*)LIMIT.*/is", "SELECT count(1) FROM $1", $query->request); } else { $countSQL = preg_replace("/SELECT.*?FROM(.*)/is", "SELECT count(1) FROM $1", $query->request); } $count = $this->getCacheSQLResult($countSQL); return $count; } protected function shouldOptimize() { foreach ($this->optimizeQueryPosition as $position) { if ($position == 'home' && is_home()) { return true; } else if ($position == 'tag' && is_tag()) { return true; } else if ($position == 'category' && is_category()) { return true; } else if ($position == 'admin' && is_admin()) { return true; } } return false; } protected function getCacheSQLResult($sql) { global $wpdb; $key = "c_" . substr(md5(str_replace(array(" ", "\n", "\r", "\t"), "", $sql)), 8, 16); $result = json_decode(get_option($key), true); if (empty($result)) { $count = $wpdb->get_var($sql); $result = array( 'c' => $count, 'e' => time() + 86400, ); add_option($key, json_encode($result), '', 'no'); return $count; } if (time() > $result["e"]) { register_shutdown_function(function () use ($wpdb, $sql, $key) { if (function_exists("fastcgi_finish_request")) { session_write_close(); fastcgi_finish_request(); } $count = $wpdb->get_var($sql); $result = array( 'c' => $count, 'e' => time() + 86400, ); update_option($key, json_encode($result), false); }); } return $result["c"]; } public function countPosts() { $cacheKey = _count_posts_cache_key("post", "readable"); $result = json_decode(get_option($cacheKey), true); if (empty($result)) { $count = wp_count_posts("post", "readable"); $result = array( 'c' => $count, 'e' => time() + 86400, ); add_option($cacheKey, json_encode($result), '', 'no'); wp_cache_set($cacheKey, (object) $result["c"], 'counts'); return; } if (isset($_GET["flush_post_count"])) { if (!empty($_GET['cat'])) { $cat = intval($_GET['cat']); $this->flushCount($cat); } else { $count = wp_count_posts("post", "readable"); $result = array( 'c' => $count, 'e' => time() + 86400, ); update_option($cacheKey, json_encode($result), false); wp_cache_set($cacheKey, (object) $result["c"], 'counts'); return; } } if (time() > $result["e"]) { register_shutdown_function(function () use ($cacheKey) { if (function_exists("fastcgi_finish_request")) { session_write_close(); fastcgi_finish_request(); } $count = wp_count_posts("post", "readable"); $result = array( 'c' => $count, 'e' => time() + 86400, ); update_option($cacheKey, json_encode($result), false); }); } wp_cache_set($cacheKey, (object) $result["c"], 'counts'); return; } public function flushCount($cat) { global $wpdb; if (!$cat) { return; } $cat = intval($cat); $count = $wpdb->get_var("SELECT count(1) FROM {$wpdb->prefix}term_relationships WHERE term_taxonomy_id={$cat}"); return $wpdb->query("UPDATE {$wpdb->prefix}term_taxonomy SET `count`= {$count} WHERE term_taxonomy_id={$cat}"); } public function ajaxFlushCount() { if (isset($_GET['cat'])) { $cat = intval($_GET['cat']); if ($this->flushCount($cat) > 0) { echo '执行成功, 已经更新!'; } else { echo '无更新!'; } } die(); } public function addColumn($cols) { $cols['flush'] = '刷新计数'; return $cols; } public function addValue($column_name, $id) { if ($column_name == 'flush') { $adminURL = admin_url(); echo "<a href='{$adminURL}admin-ajax.php?action=flush_count&cat=$id' target='_blank'>刷新</a>"; } } public function addReturnValue($value, $columnName, $id) { if ($columnName == 'flush') { $adminURL = admin_url(); $value = "<a href='{$adminURL}admin-ajax.php?action=flush_count&cat=$id' target='_blank'>刷新</a>"; } return $value; } } 